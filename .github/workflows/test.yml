name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@2.0.0
        with:
          scandir: '.'
          severity: warning
          check_together: 'yes'
          disable_matcher: false
          format: gcc

  test:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-22.04, ubuntu-20.04]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y systemd jq bc
          
      - name: Verify environment
        run: |
          echo "=== Environment Info ==="
          echo "OS: $(lsb_release -a 2>/dev/null || cat /etc/os-release)"
          echo "Bash: $(bash --version | head -1)"
          echo "Bun: $(bun --version)"
          echo "systemd: $(systemctl --version | head -1)"
          echo "User: $(whoami)"
          echo "Home: $HOME"
          echo "PATH: $PATH"
          
      - name: Create test directories
        run: |
          mkdir -p tests/reports
          mkdir -p tests/tmp
          
      - name: Run Core Function Tests
        run: |
          chmod +x tests/test_core.sh
          ./tests/test_core.sh | tee tests/reports/core.log
          
      - name: Run Command Tests
        run: |
          chmod +x tests/test_commands.sh
          ./tests/test_commands.sh | tee tests/reports/commands.log
          
      - name: Run Integration Tests
        run: |
          chmod +x tests/test_integration.sh
          ./tests/test_integration.sh | tee tests/reports/integration.log
          
      - name: Run Edge Case Tests
        run: |
          chmod +x tests/test_edge_cases.sh
          ./tests/test_edge_cases.sh | tee tests/reports/edge_cases.log
          
      - name: Run All Tests (Summary)
        run: |
          chmod +x tests/run_all.sh
          ./tests/run_all.sh
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: tests/reports/
          retention-days: 7
          
      - name: Upload test logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ matrix.os }}
          path: |
            tests/tmp/
            /tmp/bunctl-test-*
          retention-days: 7

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          
      - name: Install kcov
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake binutils-dev libcurl4-openssl-dev zlib1g-dev libdw-dev libiberty-dev
          git clone https://github.com/SimonKagstrom/kcov.git /tmp/kcov
          cd /tmp/kcov
          mkdir build
          cd build
          cmake ..
          make
          sudo make install
          
      - name: Run tests with coverage
        run: |
          mkdir -p coverage
          kcov --exclude-pattern=/usr coverage ./tests/run_all.sh
          
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          directory: ./coverage
          flags: unittests
          fail_ci_if_error: false

  docker-test:
    name: Docker Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: [debian:12, debian:11, ubuntu:24.04, ubuntu:22.04]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Test in Docker
        run: |
          docker run --rm -v $PWD:/workspace -w /workspace ${{ matrix.distro }} bash -c "
            apt-get update && \
            apt-get install -y curl systemd jq bc && \
            curl -fsSL https://bun.sh/install | bash && \
            export PATH=/root/.bun/bin:\$PATH && \
            chmod +x tests/run_all.sh && \
            tests/run_all.sh
          "

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'